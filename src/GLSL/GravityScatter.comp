#version 460
#extension GL_ARB_separate_shader_objects : enable

#define X_DIM 512

layout (local_size_x = X_DIM, local_size_y = 1, local_size_z = 1) in;

struct Agent {
    uint typeId;
    int playerId;
    vec3 position;
    vec3 velocity;
    vec3 acceleration;
    vec3 target;
    vec3 rotationalVelocity;
    vec4 rotation;
    float radius;
    float mass;
};

struct MassiveAgent {
    vec3 position;
    float mass;
};

readonly layout (std430, binding = 0) buffer agentsBuffer {
    Agent agents[];
};

readonly layout (std430, binding = 1) buffer scanBuffer {
    uint scan[];
};

writeonly layout (std430, binding = 2) buffer massiveAgentsBuffer {
    MassiveAgent massiveAgents[];
};

readonly layout (std430, binding = 3) buffer numberOfAgentsBuffer {
    uint numberOfAgents;
};

void main() {
    const uint index = gl_GlobalInvocationID.x;

    if (index > numberOfAgents) { return; }

    const float mass = agents[index].mass;

    if (mass > 10000000000.0f) {
        massiveAgents[scan[index]] = MassiveAgent(agents[index].position, mass);
    }
}
