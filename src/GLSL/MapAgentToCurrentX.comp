#version 460
#extension GL_ARB_separate_shader_objects : enable

#define X_DIM 256

layout (local_size_x = X_DIM, local_size_y = 1, local_size_z = 1) in;

struct Agent {
    int playerId;
    vec3 position;
    vec3 velocity;
    vec3 acceleration;
    vec3 target;
    vec4 rotation;
    vec4 rotationalVelocity;
    float radius;
};

struct ValueAndIndex {
    float value;
    uint index;
};

layout (std430, binding = 0) buffer bufferAgent {
    Agent agents[];
};

layout (std430, binding = 1) buffer bufferValueAndIndex {
    ValueAndIndex valueAndIndexes[];
};

layout (std430, binding = 2) buffer bufferTimeDelta {
    float timeDelta;
};

layout (std430, binding = 3) buffer bufferNumberOfElements {
    uint numberOfElements;
};

void main() {
    uint index = gl_GlobalInvocationID.x;

    if (index >= numberOfElements) { return; }

    Agent agent = agents[index];

    valueAndIndexes[index] = ValueAndIndex(agent.position.x, index);
}
