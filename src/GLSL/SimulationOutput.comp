#version 460
#extension GL_ARB_separate_shader_objects : enable

#define X_DIM 512

layout (local_size_x = X_DIM, local_size_y = 1, local_size_z = 1) in;

struct Agent {
    uint typeId;
    int playerId;
    vec3 position;
    vec3 velocity;
    vec3 rotationalVelocity;
    vec4 rotation;
    float radius;
    float mass;
    float life;
};

struct AgentRenderInfo {
    uint typeId;
    vec3 position;
    vec4 rotation;
};

readonly layout (std430, binding = 0) buffer agentsBuffer {
    Agent agents[];
};

writeonly layout (std430, binding = 1) buffer agentRenderInfosBuffer {
    AgentRenderInfo agentRenderInfos[];
};

writeonly layout (std430, binding = 2) buffer playerRenderInfosBuffer {
    AgentRenderInfo playerRenderInfos[];
};

readonly layout (push_constant) uniform InfoBuffer {
    uint numberOfAgents;
} info;

void main() {
    uint index = gl_GlobalInvocationID.x;

    if (index >= info.numberOfAgents) {
        return;
    }

    Agent agent = agents[index];
    AgentRenderInfo agentRenderInfo = AgentRenderInfo(agent.typeId, agent.position, agent.rotation);

    agentRenderInfos[index] = agentRenderInfo;

    if (agent.playerId >= 0) {
        playerRenderInfos[agent.playerId] = agentRenderInfo;
    }
}
