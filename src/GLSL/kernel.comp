#version 450
#extension GL_ARB_separate_shader_objects : enable

#define X_DIM 512
#define NUM_ELEMENTS 16 * X_DIM

layout (local_size_x = X_DIM, local_size_y = 1, local_size_z = 1) in;

struct Agent {
    vec2 position;
    vec2 velocity;
};

layout (std430, binding = 0) buffer bufA {
    Agent agents[];
};

layout (std430, binding = 1) buffer bufB {
    vec2 numsB[];
};

layout (std430, binding = 2) buffer bufC {
    vec3 numsC[];
};

void main() {
    uint index = gl_GlobalInvocationID.x;

    if (index > NUM_ELEMENTS) { return; }

    //numsC[index] = numsA[index] + numsB[index];

    Agent agent = agents[index];
    numsC[index] = vec3(agent.position + agent.velocity, index);
}
