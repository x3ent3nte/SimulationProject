#version 460
#extension GL_ARB_separate_shader_objects : enable

#define X_DIM 256

layout (local_size_x = X_DIM, local_size_y = 1, local_size_z = 1) in;

struct ComputedCollision {
    uint agentIndex;
    uint time;
    vec3 velocityDelta;
};

struct ValueAndIndex {
    uint value;
    uint index;
};

readonly layout (std430, binding = 0) buffer collisionsBuffer {
    ComputedCollision collisions[];
};

writeonly layout (std430, binding = 1) buffer valueAndIndexesBuffer {
    ValueAndIndex valueAndIndexes[];
};

readonly layout (std430, binding = 2) buffer numberOfElementsBuffer {
    uint numberOfElements;
};

void main() {
    const uint index = gl_GlobalInvocationID.x;

    if (index >= numberOfElements) { return; }

    valueAndIndexes[index] = ValueAndIndex(collisions[index].agentIndex, index);
}
