#version 460
#extension GL_ARB_separate_shader_objects : enable

#define X_DIM 512

layout (local_size_x = X_DIM, local_size_y = 1, local_size_z = 1) in;

struct ValueAndIndex {
    uint value;
    uint index;
};

readonly layout (std430, binding = 0) buffer dataInBuffer {
    ValueAndIndex dataIn[];
};

writeonly layout (std430, binding = 1) buffer dataOutBuffer {
    uvec4 dataOut[];
};

readonly layout (std430, binding = 2) buffer radixBuffer {
    uint radix;
};

readonly layout (std430, binding = 3) buffer numberOfElementsBuffer {
    uint numberOfElements;
};

void main() {
    const uint index = gl_GlobalInvocationID.x;

    if (index >= numberOfElements) { return; }

    const uint value = dataIn[index].value;

    const uint anded = (value >> radix) & 3;

    uvec4 outVector = uvec4(0, 0, 0, 0);
    outVector[anded] = 1;

    dataOut[index] = outVector;
}
