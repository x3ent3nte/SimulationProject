#version 460
#extension GL_ARB_separate_shader_objects : enable

#define X_DIM 512

layout (local_size_x = X_DIM, local_size_y = 1, local_size_z = 1) in;

struct Agent {
    vec3 position;
    vec3 velocity;
    vec3 acceleration;
    vec3 target;
    vec4 rotation;
    vec4 rotationalVelocity;
    float radius;
};

layout (std430, binding = 0) buffer bufferAgentIn {
    Agent agentsIn[];
};

layout (std430, binding = 1) buffer bufferAddresses {
    uint addresses[];
};

layout (std430, binding = 2) buffer bufferAgentOut {
    Agent agentsOut[];
};

layout (push_constant) uniform InfoConstant {
    uint numberOfElements;
} info;

void main() {
    uint globalOffset = gl_WorkGroupID.x * X_DIM;
    uint localIndex = gl_LocalInvocationID.x;
    uint globalIndex = globalOffset + localIndex;

    if (globalIndex >= info.numberOfElements) { return; }

    uint address;
    if (globalIndex == 0) {
        address = 0;
    } else {
        address = addresses[globalIndex - 1];
    }

    agentsOut[address] = agentsIn[globalIndex];
}
